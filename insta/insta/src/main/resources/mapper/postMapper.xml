<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.posco.insta.post.repository.PostMapper">
    <select id="getPosts" resultType="PostDto">
        SELECT id, userId, img, content FROM posts
    </select>

    <select id="getPostsById" resultType="SelectJoinDto" parameterType="PostDto">
        SELECT p.id, p.userId, p.img, p.content, u.name
            AS userName, u.img AS userImg
        FROM posts as p INNER JOIN users as u ON  p.userId = u.id WHERE p.id = #{id}
    </select>
    <select id="getPostsByKey" resultType="SelectJoinDto" parameterType="String">
        SELECT p.id, p.userId, p.img, p.content, u.name
            AS userName, u.img AS userImg
        FROM posts as p INNER JOIN users as u ON  p.userId = u.id WHERE p.content like concat('%',#{key},'%')
    </select>

    <select id="getPostsByMyFollowing" resultType="SelectJoinDto" parameterType="PostDto">
        SELECT p.id, p.userId, p.img, p.content, u.name AS userName, u.img AS userImg, f.follower, f.following
        FROM posts AS p INNER JOIN users AS u ON p.userId = u.id
                        INNER JOIN follows AS f ON p.userId = f.following
        WHERE f.follower=#{userId}

    </select>

    <select id="findPostsByUserId" resultType="SelectJoinDto" parameterType="PostDto">
        SELECT p.id, p.userId, p.img, p.content, u.name AS userName, u.img AS userImg
        FROM posts AS p INNER JOIN users AS u
                        ON p.userId = u.id
                        WHERE p.userId=#{userId}

    </select>
    <delete id="deletePost" parameterType="PostDto">
        DELETE FROM posts WHERE id = #{id} AND userId = #{userId}
    </delete>


    <select id="findPostsByNotUserId" resultType="SelectJoinDto" parameterType="PostDto">
        SELECT p.id, p.userId, p.img, p.content, u.name AS userName, u.img AS userImg
        FROM posts AS p INNER JOIN users AS u
                                   ON p.userId = u.id
        WHERE p.userId!=#{userId}
    </select>

    <update id="updatePost" parameterType="PostDto" >
        UPDATE posts
        <set>
        <if test="content!=null">content = #{img},</if>
        <if test="img!=null">img = #{img},</if>
        </set>
        WHERE id = #{id} AND userId=#{userId}

    </update>
    <insert id="writePost" parameterType="PostDto" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO posts (userId, img, content) VALUES (#{userId}, #{img}, #{content})
    </insert>

</mapper>